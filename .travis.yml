language: c++
compiler: clang
os: linux
sudo: false


matrix:
  include:
    # clang 3.6
    - addons:
        apt:
          packages:
            - clang-3.6
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6

install:
  ############################################################################
  # All the dependencies are installed to the deps/ subdirectory.
  ############################################################################
  - DEPS_DIR="${PWD}/deps"
  - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}

  ############################################################################
  # Install Boost headers
  ############################################################################
  - BOOST_URL="http://sourceforge.net/projects/boost/files/boost/1.58.0/boost_1_58_0.tar.gz"
  - mkdir boost && travis_retry wget --quiet -O - ${BOOST_URL} | tar --strip-components=1 -xz -C boost

  ############################################################################
  # Install a recent CMake
  ############################################################################
  - CMAKE_URL=http://www.cmake.org/files/v3.2/cmake-3.2.1-Linux-x86_64.tar.gz
  - mkdir cmake
  - travis_retry wget --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
  - export PATH=${PWD}/cmake/bin:${PATH}

  ############################################################################
  # Install libc++ and libc++abi
  # Note: We install libc++[abi] 3.6 even with Clang 3.5, because the 3.5
  #       version does not seem to provide <ciso646>, which we require.
  ############################################################################
  - LLVM_URL="http://llvm.org/releases/3.6.1/llvm-3.6.1.src.tar.xz"
  - LIBCXX_URL="http://llvm.org/releases/3.6.1/libcxx-3.6.1.src.tar.xz"
  - LIBCXXABI_URL="http://llvm.org/releases/3.6.1/libcxxabi-3.6.1.src.tar.xz"
  - TAR_FMT="-xJ"

  - mkdir -p llvm llvm/build llvm/projects/libcxx llvm/projects/libcxxabi
  - travis_retry wget --quiet -O - ${LLVM_URL} | tar --strip-components=1 ${TAR_FMT} -C llvm
  - travis_retry wget --quiet -O - ${LIBCXX_URL} | tar --strip-components=1 ${TAR_FMT} -C llvm/projects/libcxx
  - travis_retry wget --quiet -O - ${LIBCXXABI_URL} | tar --strip-components=1 ${TAR_FMT} -C llvm/projects/libcxxabi
  - (cd llvm/build && cmake .. -DCMAKE_CXX_COMPILER=clang++ && make cxx -j2)

before_script:
  ############################################################################
  # Go back to the root of the project.
  ############################################################################
  - cd ${TRAVIS_BUILD_DIR}

  ############################################################################
  # Setup the build directory
  ############################################################################
  - mkdir build
  - cd build
  - cmake ..

script:
  ############################################################################
  # Build and run the unit tests.
  ############################################################################
  - export CTEST_PARALLEL_LEVEL=2 # Run unit tests on two cores
  - make -j2 && make test

